generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model BeerStyle {
  id                     Int    @id(map: "pk_beer_styles") @default(autoincrement())
  name                   String
  appearanceDescription  String @map("appearance_description")
  aromaDescription       String @map("aroma_description")
  flavorDescription      String @map("flavor_description")
  mouthfeelDescription   String @map("mouthfeel_description")
  comments               String
  history                String
  ibuMinimum             Int    @map("ibu_minimum")
  ibuMaximum             Int    @map("ibu_maximum")
  srmMinimum             Int    @map("srm_minimum")
  srmMaximum             Int    @map("srm_maximum")
  originalGravityMinimum Float  @map("original_gravity_minimum") @db.Real
  originalGravityMaximum Float  @map("original_gravity_maximum") @db.Real
  finalGravityMinimum    Float  @map("final_gravity_minimum") @db.Real
  finalGravityMaximum    Float  @map("final_gravity_maximum") @db.Real
  abvMinimum             Float  @map("abv_minimum") @db.Real
  abvMaximum             Float  @map("abv_maximum") @db.Real
  fermentation           Int
  bjcpCode               String @default("") @map("bjcp_code")
  overallImpression      String @default("") @map("overall_impression")
  imageUrl               String @default("") @map("image_url")

  @@map("beer_styles")
}

model Grain {
  id                          Int           @id(map: "pk_grains") @default(autoincrement())
  name                        String
  lovibond                    Float         @db.Real
  fineGrindDryBasisPercentage Float         @map("fine_grind_dry_basis_percentage") @db.Real
  suggestedMaximumUsage       Int           @default(0) @map("suggested_maximum_usage")
  suggestedMinimumUsage       Int           @default(0) @map("suggested_minimum_usage")
  maltster                    String        @default("")
  recipeGrains                RecipeGrain[]

  @@map("grains")
}

model Hop {
  id                      Int         @id(map: "pk_hops") @default(autoincrement())
  name                    String
  forAroma                Boolean     @default(false) @map("for_aroma")
  forBittering            Boolean     @default(false) @map("for_bittering")
  forDryHopping           Boolean     @default(false) @map("for_dry_hopping")
  forFlavor               Boolean     @default(false) @map("for_flavor")
  minimumTypicalAlphaAcid Float       @map("minimum_typical_alpha_acid")
  maximumTypicalAlphaAcid Float       @map("maximum_typical_alpha_acid")
  recipeHops              RecipeHop[]

  @@map("hops")
}

model RecipeGrain {
  id             Int    @id(map: "pk_recipe_grains") @default(autoincrement())
  recipeId       Int    @map("recipe_id")
  grainId        Int    @map("grain_id")
  weightInPounds Float  @default(0) @map("weight_in_pounds") @db.Real
  grain          Grain  @relation(fields: [grainId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_recipe_grains_grains_grain_id")
  recipe         Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_recipe_grains_recipes_recipe_id")

  @@index([grainId], map: "ix_recipe_grains_grain_id")
  @@index([recipeId], map: "ix_recipe_grains_recipe_id")
  @@map("recipe_grains")
}

model RecipeHop {
  id               Int    @id(map: "pk_recipe_hops") @default(autoincrement())
  recipeId         Int    @map("recipe_id")
  hopId            Int    @map("hop_id")
  alphaAcidPercent Float  @default(0) @map("alpha_acid_percent") @db.Real
  boilTimeMinutes  Int    @default(0) @map("boil_time_minutes")
  weightInOunces   Float  @default(0) @map("weight_in_ounces") @db.Real
  hop              Hop    @relation(fields: [hopId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_recipe_hops_hops_hop_id")
  recipe           Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_recipe_hops_recipes_recipe_id")

  @@index([hopId], map: "ix_recipe_hops_hop_id")
  @@index([recipeId], map: "ix_recipe_hops_recipe_id")
  @@map("recipe_hops")
}

model Recipe {
  id           Int           @id(map: "pk_recipes") @default(autoincrement())
  name         String
  description  String
  recipeGrains RecipeGrain[]
  recipeHops   RecipeHop[]

  @@map("recipes")
}

model Tag {
  id       Int    @id(map: "pk_tags")
  label    String
  category Int

  @@map("tags")
}

model User {
  id        Int    @id(map: "pk_users") @default(autoincrement())
  firstName String @default("") @map("first_name")
  lastName  String @default("") @map("last_name")
  email     String @default("")
  appleId   String @unique @map("apple_id")

  @@map("users")
}

model WaterProfile {
  id               Int    @id(map: "pk_water_profiles") @default(autoincrement())
  label            String
  minimumCalcium   Int    @map("minimum_calcium")
  maximumCalcium   Int    @map("maximum_calcium")
  minimumMagnesium Int    @map("minimum_magnesium")
  maximumMagnesium Int    @map("maximum_magnesium")
  minimumSodium    Int    @map("minimum_sodium")
  maximumSodium    Int    @map("maximum_sodium")
  minimumCarbonate Int    @map("minimum_carbonate")
  maximumCarbonate Int    @map("maximum_carbonate")
  minimumSulfate   Int    @map("minimum_sulfate")
  maximumSulfate   Int    @map("maximum_sulfate")
  minimumChloride  Int    @map("minimum_chloride")
  maximumChloride  Int    @map("maximum_chloride")

  @@map("water_profiles")
}

model Yeast {
  id                 Int    @id(map: "pk_yeasts") @default(autoincrement())
  name               String
  fermentation       Int    @default(0)
  maximumTemperature Int    @default(0) @map("maximum_temperature")
  minimumTemperature Int    @default(0) @map("minimum_temperature")
  attenuation        Float  @default(0) @db.Real

  @@map("yeasts")
}
